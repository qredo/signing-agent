{"openapi":"3.0.1","info":{"title":"Qredo Signing Agent V2","description":"The Qredo Signing Agent service interacts with [Partner API](https://developers.qredo.com/partner-api/api/swagger/) to register a Signing Agent to automate approvals according to your custody policy. <br/>\nAuthentication and encryption are required; set up your [API key and secret in the Qredo Web App](https://developers.qredo.com/signing-agent/v2-signing-agent/get-started/). <br/>","contact":{"name":"Qredo API Services","url":"https://www.qredo.com","email":"support@qredo.com"},"license":{"name":"APACHE 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0"},"version":"1.0.0"},"servers":[{"url":"http://localhost:8007/api/v1"},{"url":"https://localhost:8007/api/v1"}],"paths":{"/client":{"get":{"tags":["client"],"summary":"Get information about the registered agent","description":"This endpoint retrieves the `agentID` and `feedURL` if an agent is registered.","operationId":"GetClient","responses":{"200":{"description":"GetClientResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetClientResponse"}}}}}}},"/client/action/{action_id}":{"put":{"tags":["action"],"summary":"Approve a transaction","description":"This endpoint approves a transaction based on the transaction ID, `action_id`, passed.","operationId":"ActionApprove","parameters":[{"name":"action_id","in":"path","description":"the ID of the transaction that is received from the feed","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"GenericResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}},"delete":{"tags":["action"],"summary":"Reject a transaction","description":"This endpoint rejects a transaction based on the transaction ID, `action_id`, passed.","operationId":"actionReject","parameters":[{"name":"action_id","in":"path","description":"the ID of the transaction that is received from the feed","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"GenericResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GenericResponse"}}}}}}},"/client/feed":{"get":{"tags":["client"],"summary":"Get approval requests Feed (via websocket) from Qredo Backend","description":"This endpoint feeds approval requests coming from the Qredo Backend to the agent.","operationId":"ClientFeed","responses":{"200":{"description":"ClientFeedResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClientFeedResponse"}}}}}}},"/healthcheck/config":{"get":{"tags":["healthcheck"],"summary":"Check application configuration","description":"This endpoint returns the application configuration.","operationId":"HealthcheckConfig","responses":{"200":{"description":"ConfigResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ConfigResponse"}}}}}}},"/healthcheck/status":{"get":{"tags":["healthcheck"],"summary":"Check application status","description":"This endpoint returns the application status.","operationId":"HealthcheckStatus","responses":{"200":{"description":"StatusResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StatusResponse"}}}}}}},"/healthcheck/version":{"get":{"tags":["healthcheck"],"summary":"Check application version","description":"This endpoint returns information about the application version.","operationId":"HealthCheckVersion","responses":{"200":{"description":"VersionResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/VersionResponse"}}}}}}},"/register":{"post":{"tags":["client"],"summary":"Register a new agent","description":"This will register the agent only if there is none already registered.","operationId":"RegisterAgent","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClientRegisterRequest"}}},"required":false},"responses":{"200":{"description":"AgentRegisterResponse","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AgentRegisterResponse"}}}}},"x-codegen-request-body-name":"Body"}}},"components":{"schemas":{"AWSConfig":{"title":"AWSConfig-based Signing Agent config: used when Base `store` `type` is `aws`.","type":"object","properties":{"configSecret":{"type":"string","description":"The name of the AWS Secrets Manager secret containing the encrypted data","example":"secrets_manager_secret"},"region":{"type":"string","description":"The AWS region where the secret is stored","example":"eu-west-3"}}},"AgentRegisterResponse":{"type":"object","properties":{"agentID":{"type":"string","description":"The ID of the agent","example":"98cTMMSPrDdcDDVU8idhuJGK2U1P4vmQcsp8wnED8pPR"},"feedURL":{"type":"string","description":"The feed websocket URL","example":"http://localhost:8007/api/v1/client/feed"}}},"AutoApprove":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Activate the automatic approval of every transaction that is received","example":true},"retryIntervalMaxSec":{"type":"integer","description":"The maximum time in which the signing agent retries to approve an action. After that, itâ€™s considered as a failure","format":"int64","example":300},"retryIntervalSec":{"type":"integer","description":"The interval in which the Signing Agent is attempting to approve an action. It will retry until the `retryIntervalMaxSec` is reached","format":"int64","example":5}}},"Base":{"type":"object","properties":{"pin":{"type":"integer","description":"The pin number to use to provide a zero knowledge proof token for communication with the Partner API","format":"int64","example":123456},"qredoAPI":{"type":"string","description":"The URL of the Qredo API","example":"https://sandbox-api.qredo.network"}}},"ClientFeedResponse":{"type":"object","properties":{"coreClientID":{"type":"string","description":"The ID of the agent","example":"98cTMMSPrDdcDDVU8idhuJGK2U1P4vmQcsp8wnED8pPR"},"expireTime":{"type":"integer","description":"The time that the transaction will expire, utc unix time","format":"int64","example":1676184187},"id":{"type":"string","description":"The ID of the transaction","example":"2IXwq4klvWbnPf1YaAc1XD85jJX"},"status":{"type":"string","description":"The status of the transaction","example":"pending","enum":["pending","expired","approved","rejected"]},"timestamp":{"type":"integer","description":"The time that the transaction was started, utc unix time","format":"int64","example":1670341423},"type":{"type":"string","description":"The type of the transaction","example":"ApproveWithdraw","enum":["ApproveWithdraw","ApproveTransfer"]}}},"ClientRegisterRequest":{"type":"object","properties":{"APIKey":{"type":"string","description":"The API key for the partner API","example":"eyJrZXkiOiJHM0Fo... (truncated)"},"base64PrivateKey":{"type":"string","description":"The Base64-encoded private key pem of which the public key has been registered in the Partner API","example":"LS0tLS1CRUdJTiBS... (truncated)"},"name":{"type":"string","description":"The name of the agent","example":"test-agent"}}},"ConfigResponse":{"type":"object","properties":{"autoApproval":{"$ref":"#/components/schemas/AutoApprove"},"base":{"$ref":"#/components/schemas/Base"},"http":{"$ref":"#/components/schemas/HttpSettings"},"loadBalancing":{"$ref":"#/components/schemas/LoadBalancing"},"logging":{"$ref":"#/components/schemas/Logging"},"store":{"$ref":"#/components/schemas/Store"},"websocket":{"$ref":"#/components/schemas/WebSocketConfig"}}},"GenericResponse":{"type":"object","properties":{"Code":{"type":"integer","description":"The result code of the request","format":"int64","example":200},"Msg":{"type":"string","description":"The result message of the request","example":"OK"}}},"GetClientResponse":{"type":"object","properties":{"agentID":{"type":"string","description":"The ID of the agent","example":"98cTMMSPrDdcDDVU8idhuJGK2U1P4vmQcsp8wnED8pPR"},"feedURL":{"type":"string","description":"The feed websocket URL","example":"http://localhost:8007/api/v1/client/feed"}}},"HttpSettings":{"type":"object","properties":{"CORSAllowOrigins":{"type":"array","description":"The value of the Access-Control-Allow-Origin of the responses of the build in API","example":"'*'","items":{"type":"string"}},"TLS":{"$ref":"#/components/schemas/TLSConfig"},"addr":{"type":"string","description":"The address and port the service runs on [the bind address and port the build in API endpoints]","example":"0.0.0.0:8007"},"logAllRequests":{"type":"boolean","description":"Log all incoming requests to the build in API","example":true}}},"LoadBalancing":{"type":"object","properties":{"actionIDExpirationSec":{"type":"integer","description":"The expiration of actionID variable in Redis in seconds","format":"int64","example":6},"enable":{"type":"boolean","description":"Enables the load-balancing logic","example":true},"onLockErrorTimeoutMs":{"type":"integer","description":"The on lock timeout in milliseconds","format":"int64","example":300},"redis":{"$ref":"#/components/schemas/RedisConfig"}}},"Logging":{"type":"object","properties":{"format":{"type":"string","description":"The format of the logging","example":"json","enum":["text"," json"]},"level":{"type":"string","description":"The level of the logging","example":"debug","enum":["info"," warn"," error"," debug"]}}},"OciConfig":{"title":"OciConfig-based Signing Agent config: used when Base `store` `type` is `oci`.","type":"object","properties":{"compartment":{"type":"string","description":"The OCID where the vault and encryption key reside","example":"ocid1.tenancy.oc1..."},"configSecret":{"type":"string","description":"The name of secret that will be used to store the data","example":"automated_approver_config"},"secretEncryptionKey":{"type":"string","description":"The encryption key used for both the secret and the data inside the secret","example":"ocid1.key.oc1..."},"vault":{"type":"string","description":"The OCID of the vault where the secret will be stored","example":"ocid1.vault.oc1..."}}},"RedisConfig":{"title":"RedisConfig-based Signing Agent config: used when LoadBalancing `enable` is `true`.","type":"object","properties":{"db":{"type":"integer","description":"Redis database to be selected after connecting to the server","format":"int64","example":0},"host":{"type":"string","description":"The Redis host","example":"redis"},"password":{"type":"string","description":"The Redis password","example":"just a password"},"port":{"type":"integer","description":"The Redis port","format":"int64","example":6379}}},"StatusResponse":{"type":"object","properties":{"websocket":{"$ref":"#/components/schemas/WebsocketStatus"}}},"Store":{"type":"object","properties":{"aws":{"$ref":"#/components/schemas/AWSConfig"},"file":{"type":"string","description":"The path to the storage file when `file` store is used","example":"/volume/ccstore.db"},"oci":{"$ref":"#/components/schemas/OciConfig"},"type":{"type":"string","description":"The type of store to use to store the private key information for the Signing Agent","example":"file","enum":["file"," oci"," aws"]}}},"TLSConfig":{"type":"object","properties":{"certFile":{"type":"string","description":"The cert file to use for the TLS server","example":"tls/domain.crt"},"enabled":{"type":"boolean","description":"Enable TLS for the internal HTTP server","example":true},"keyFile":{"type":"string","description":"The key file to use for the TLS server","example":"tls/domain.key"}}},"VersionResponse":{"type":"object","properties":{"buildDate":{"type":"string","description":"The application build date","example":"2022-12-01"},"buildType":{"type":"string","description":"The application build type","example":"dev"},"buildVersion":{"type":"string","description":"The application build version","example":"v1.0.0"}}},"WebSocketConfig":{"type":"object","properties":{"pingPeriodSec":{"type":"integer","description":"The ping period for the ping handler in seconds","format":"int64","example":5},"pongWaitSec":{"type":"integer","description":"The pong wait for the pong handler in seconds","format":"int64","example":10},"qredoWebsocket":{"type":"string","description":"The URL of the Qredo websocket feed","example":"wss://play-api.qredo.network/api/v1/p/coreclient/feed"},"readBufferSize":{"type":"integer","description":"The websocket upgrader read buffer size in bytes","format":"int64","example":512},"reconnectIntervalSec":{"type":"integer","description":"The reconnect interval in seconds","format":"int64","example":5},"reconnectTimeoutSec":{"type":"integer","description":"The reconnect timeout in seconds","format":"int64","example":300},"writeBufferSize":{"type":"integer","description":"The websocket upgrader write buffer size in bytes","format":"int64","example":1024},"writeWaitSec":{"type":"integer","description":"The write wait in seconds","format":"int64","example":10}}},"WebsocketStatus":{"type":"object","properties":{"connectedClients":{"type":"integer","description":"The number of connected feed clients","format":"uint32","example":2},"localFeedURL":{"type":"string","description":"The local feed websocket URL","example":"http://localhost:8007/api/v1/client/feed"},"readyState":{"type":"string","description":"The state of the websocket connection with the server","example":"OPEN","enum":["OPEN"," CLOSED"," CONNECTING"]},"remoteFeedURL":{"type":"string","description":"The server websocket URL","example":"wss://play-api.qredo.network/api/v1/p/coreclient/feed,"}}}}}}